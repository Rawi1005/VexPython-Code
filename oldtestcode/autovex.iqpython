{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nmotor_left = Motor(Ports.PORT8, False)\nmotor_right = Motor(Ports.PORT12, True)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n# \tAuthor:       VEX\n# \tCreated:\n# \tDescription:  VEXcode IQ Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\nbrain_inertial.set_heading(0, DEGREES)\nbrain_inertial.set_rotation(0, DEGREES)\n\nmotor_left.set_velocity(70,PERCENT)\nmotor_right.set_velocity(70,PERCENT)\ndef forward(amt):\n    stdb = brain_inertial.rotation()\n    motor_left.set_position(0, DEGREES)\n    while motor_left.position(DEGREES) <= amt:\n       \n        db = brain_inertial.rotation()-stdb\n        print(db)\n        # time.sleep(0.10)\n\n        \n        if db <= -3:\n            motor_left.set_velocity(60,PERCENT)\n            motor_right.set_velocity(55,PERCENT)\n            motor_left.spin(FORWARD)\n            motor_right.spin(FORWARD)\n            ### left ####\n        elif db >= 3:\n            motor_left.set_velocity(55,PERCENT)\n            motor_right.set_velocity(60,PERCENT)\n            motor_left.spin(FORWARD)\n            motor_right.spin(FORWARD)\n            ### right ####\n        \n        else:\n            motor_left.set_velocity(80,PERCENT)\n            motor_right.set_velocity(80,PERCENT)\n            motor_left.spin(FORWARD)\n            motor_right.spin(FORWARD)\n        \n\n\n    motor_left.stop()\n    motor_right.stop()\n\n\n\ndef rotate(ang):\n    stdb = brain_inertial.rotation()\n    db = brain_inertial.rotation()-stdb\n    print(db)\n    while db <= ang:\n        db = brain_inertial.rotation()-stdb\n        print(db)\n        motor_left.set_velocity(20,PERCENT)\n        motor_right.set_velocity(-20,PERCENT)\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD) \n\n    motor_left.stop()\n    motor_right.stop()\n\n\ndef automain():\n    \n    forward(2010)\n    rotate(117)\n    forward(1830)\n    rotate(103)\n    forward(1790)\n    rotate(117)\n   \n\n    \n    \n\n\nautomain()\n","textLanguage":"python","rconfig":[{"port":[8],"name":"motor_left","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[12],"name":"motor_right","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","target":"Physical"}