{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\ncontroller = Controller()\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n\n# Project: VEXcode Project\n# Author: Rawi N\n# Created: 22/1/2023\n# Description: VEXcode.py\n\n# ------------------------------------------\n\n\n\n \n\n\n# ▀█░█▀ █▀▀█ █░░ █░░█ █▀▀█ █▀▀▄ █░░ █▀▀ \n# ░█▄█░ █▄▄█ █░░ █░░█ █▄▄█ █▀▀▄ █░░ █▀▀ \n# ░░▀░░ ▀░░▀ ▀▀▀ ░▀▀▀ ▀░░▀ ▀▀▀░ ▀▀▀ ▀▀▀\n\n# ------------------------------------\nx=1\ndetect = 0\nmotor4speed = 100\nliftspeed = 100\nelevatordegrees = 170\nnon = 0\nshoot = 0\nplaceholder = 0\nchangemode = 0\n\n\n\nfrom vex import *\nimport time \n\n\n# █▀▀ █▀▀ ▀▀█▀▀ █░░█ █▀▀█ \n# ▀▀█ █▀▀ ░░█░░ █░░█ █░░█ \n# ▀▀▀ ▀▀▀ ░░▀░░ ░▀▀▀ █▀▀▀\n\n\nmotor_spin.set_velocity(motor4speed, PERCENT)\nbrain_inertial.set_heading(0, DEGREES)\nmotor_middle.set_position(0,DEGREES)\nmotor_middle.set_position(0,DEGREES)\n\n\n\n# █▀▀▄ █▀▀█ ░▀░ ▀█░█▀ ░▀░ █▀▀▄ █▀▀▀ 　 █▀▀▄ █▀▀ █▀▀ \n# █░░█ █▄▄▀ ▀█▀ ░█▄█░ ▀█▀ █░░█ █░▀█ 　 █░░█ █▀▀ █▀▀ \n# ▀▀▀░ ▀░▀▀ ▀▀▀ ░░▀░░ ▀▀▀ ▀░░▀ ▀▀▀▀ 　 ▀▀▀░ ▀▀▀ ▀░░\n\n\n\n#left and right\ndef drive(lspeed, rspeed):\n    motor_left.set_velocity(lspeed,PERCENT)\n    motor_right.set_velocity(rspeed,PERCENT)\n\n\n#backward new\ndef backcount():\n    motor_left.set_position(0,DEGREES)\n    motor_right.set_position(0,DEGREES)\n    while (controller.axisA.position()<-10):\n        A = controller.axisA.position()\n        left = motor_left.position(DEGREES)\n        right = motor_right.position(DEGREES)\n        mo = left-right\n        if mo>2:\n            motor_left.set_velocity(A,PERCENT) \n            motor_right.set_velocity(A-5,PERCENT)      #left over\n\n\n        elif mo<2:\n            motor_left.set_velocity(A-5,PERCENT) \n            motor_right.set_velocity(A,PERCENT)            #right over\n\n\n        else:\n            print(\"baclkcount\")\n            motor_left.set_velocity(A,PERCENT)\n            motor_right.set_velocity(A,PERCENT)\n\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD)\n\n\n#forward new\ndef drivefrontcount():\n    motor_left.set_position(0,DEGREES)\n    motor_right.set_position(0,DEGREES)\n    if controller.axisA.position() > 30 and controller.axisC.position() < -30:\n        \n        motor_left.set_velocity(controller.axisA.position()-30,PERCENT)\n        motor_right.set_velocity(controller.axisA.position(),PERCENT)\n\n    \n    elif controller.axisA.position() > 30 and controller.axisC.position() > 30:\n    \n        motor_left.set_velocity(controller.axisA.position(),PERCENT)\n        motor_right.set_velocity(controller.axisA.position()-30,PERCENT)\n    elif (controller.axisA.position()>10):\n        A = controller.axisA.position()\n        left = motor_left.position(DEGREES)\n        right = motor_right.position(DEGREES)\n        mo = left-right\n        if mo>2:\n            motor_left.set_velocity(A-5,PERCENT) \n            motor_right.set_velocity(A,PERCENT)      #left over\n\n\n        elif mo<2:\n            motor_left.set_velocity(A,PERCENT) \n            motor_right.set_velocity(A-5,PERCENT)            #right over\n\n\n        else:\n            print(\"forwardnew\")\n            motor_left.set_velocity(A,PERCENT)\n            motor_right.set_velocity(A,PERCENT)\n\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD)\n            \n\n\n# gyro forward\ndef DriveForward():\n    GR_forDrive = brain_inertial.rotation()\n  \n    while (controller.axisA.position()>10):\n        rotat = brain_inertial.rotation()\n        print(GR_forDrive-rotat)\n        A = controller.axisA.position()\n        if(rotat-GR_forDrive>3): #RIGHT\n            motor_left.set_velocity(A/2,PERCENT)\n            motor_right.set_velocity(A/3,PERCENT)\n        elif(rotat-GR_forDrive<-3): #LEFT\n            motor_left.set_velocity(A/3,PERCENT)\n            motor_right.set_velocity(A/2,PERCENT)\n        else:\n            motor_left.set_velocity(A/1.2,PERCENT)\n            motor_right.set_velocity(A/1.2,PERCENT)\n\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD)\n       \n# gyro backward\n\ndef DriveBackward():\n    GR_forDrive = brain_inertial.rotation()\n    while (controller.axisA.position()<-10):\n        rotat = brain_inertial.rotation()\n        print(GR_forDrive-rotat)\n        A = controller.axisA.position()\n        if(rotat-GR_forDrive>3): #RIGHT\n            motor_left.set_velocity(A/3,PERCENT)\n            motor_right.set_velocity(A/2,PERCENT)\n        elif(rotat-GR_forDrive<-3): #LEFT\n            motor_left.set_velocity(A/2,PERCENT)\n            motor_right.set_velocity(A/3,PERCENT)\n        else:\n            motor_left.set_velocity(A/1.2,PERCENT)\n            motor_right.set_velocity(A/1.2,PERCENT)\n\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD)\n        \n        \n\n\n       \n   \n\n\n\n# █▀▄▀█ █▀▀█ ░▀░ █▀▀▄ 　 █▀▀ █▀▀█ █▀▀▄ █▀▀ \n# █░▀░█ █▄▄█ ▀█▀ █░░█ 　 █░░ █░░█ █░░█ █▀▀ \n# ▀░░░▀ ▀░░▀ ▀▀▀ ▀░░▀ 　 ▀▀▀ ▀▀▀▀ ▀▀▀░ ▀▀▀\n\ndef main():\n        #ตั้งความเร็วตามคันโยก\n        a =controller.axisA.position()\n        c = controller.axisC.position() / 1.5\n      \n     \n       \n\n       \n\n            \n        \n        if controller.axisA.position() >= 10 :\n            #forward  เดินหน้า\n          \n            drivefrontcount()\n            \n               \n            \n        elif controller.axisA.position() <= -10:\n            #  backward ถอยหลัง\n      \n            backcount()\n                \n            \n        elif controller.axisC.position() >= 10 or controller.axisC.position() <= -10:\n            #right and left เลี้ยวซ้ายและเลี้ยวขวา\n            drive(c, c*(-1))\n            print(\"turn\")\n\n            print(c)\n\n        elif controller.buttonLDown.pressing():\n            motor_middle.set_velocity(100, PERCENT)\n            motor_middle.spin_to_position(0,DEGREES,wait=True)\n            elevator.set_velocity(100, PERCENT)\n            elevator.spin_to_position(0,DEGREES,wait=True)\n        \n\n      \n        else:\n            #stop\n            #สั่งมอเตอร์หยุด\n            print(\"maincode\")\n            motor_left.set_velocity(0,PERCENT)\n            motor_right.set_velocity(0,PERCENT)\n\n        # ไม่ต้องสนใจ\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD)\n            \n   \n            \n           \n            \n       \n\n# ░█████╗░██████╗░██████╗░░░░░░░░█████╗░███╗░░██╗  ███╗░░░███╗░█████╗░████████╗░█████╗░██████╗░\n# ██╔══██╗██╔══██╗██╔══██╗░░░░░░██╔══██╗████╗░██║  ████╗░████║██╔══██╗╚══██╔══╝██╔══██╗██╔══██╗\n# ███████║██║░░██║██║░░██║█████╗██║░░██║██╔██╗██║  ██╔████╔██║██║░░██║░░░██║░░░██║░░██║██████╔╝\n# ██╔══██║██║░░██║██║░░██║╚════╝██║░░██║██║╚████║  ██║╚██╔╝██║██║░░██║░░░██║░░░██║░░██║██╔══██╗\n# ██║░░██║██████╔╝██████╔╝░░░░░░╚█████╔╝██║░╚███║  ██║░╚═╝░██║╚█████╔╝░░░██║░░░╚█████╔╝██║░░██║\n# ╚═╝░░╚═╝╚═════╝░╚═════╝░░░░░░░░╚════╝░╚═╝░░╚══╝  ╚═╝░░░░░╚═╝░╚════╝░░░░╚═╝░░░░╚════╝░╚═╝░░╚═╝\n\n\n\n# █▀█ █░█ █▀█ █▀█ █░░ █▀▀\n# █▀▀ █▄█ █▀▄ █▀▀ █▄▄ ██▄\n\ndef spinpurple():\n    if controller.buttonRDown.pressing():\n        global non\n        if non %2 == 1:\n            motor_spin.spin(FORWARD)\n            \n            \n            time.sleep(0.5)\n                \n        else:\n            motor_spin.spin(REVERSE)\n            \n            time.sleep(0.5)\n        non = non + 1\n        \n            \n\n# █▀ █░█ █▀█ █▀█ ▀█▀ █▀▀ █▀█\n# ▄█ █▀█ █▄█ █▄█ ░█░ ██▄ █▀▄\n\ndef shot():\n\n    if controller.buttonRUp.pressing():\n        global shoot\n      \n        if shoot %2 == 1:\n            motor_shoot.set_velocity(2,PERCENT)\n            motor_shoot.spin(REVERSE)\n            print(shoot)\n            while controller.buttonRUp.pressing(): \n                pass\n            \n            \n                \n        else:\n            motor_shoot.set_velocity(100,PERCENT)\n            motor_shoot.spin(FORWARD)\n            print(shoot)\n            while controller.buttonRUp.pressing(): \n                pass\n            \n       \n        shoot = shoot + 1\n\n\n# █▄▄ █░░ █░█ █▀▀ ▄▄ █░░ █ █▀▀ ▀█▀\n# █▄█ █▄▄ █▄█ ██▄ ░░ █▄▄ █ █▀░ ░█░\n\ndef lift():\n    data = elevator.position(DEGREES)\n    print(data)\n    elevator.set_velocity(100,PERCENT)\n    if controller.buttonEUp.pressing():\n        if data >= 90:\n            elevator.set_stopping(HOLD)\n            elevator.stop()\n            \n        else:\n            elevator.spin(FORWARD)\n        #elevator up ปุ่มกดนำลิฟท์ขึ้น\n\n     \n        # elevator.spin_for(REVERSE,elevatordegrees, DEGREES)\n\n    elif controller.buttonEDown.pressing():\n        if data <= 0:\n            elevator.set_stopping(HOLD)\n            elevator.stop()\n\n        else:\n            elevator.spin(REVERSE)\n        #elevator down ปุ่มกดนำลิฟท์ลง\n    \n       \n        # elevator.spin_for(FORWARD,elevatordegrees+1, DEGREES)\n\n    else:\n        #stop # ไม่ต้องสนใจ\n        elevator.set_stopping(HOLD)\n        elevator.stop();\n\n\n\n# █▄█ █▀▀ █░░ █░░ █▀█ █░█░█ ▄▄ █░░ █ █▀▀ ▀█▀\n# ░█░ ██▄ █▄▄ █▄▄ █▄█ ▀▄▀▄▀ ░░ █▄▄ █ █▀░ ░█░\n\ndef yellow():\n\n    midsta = motor_middle.position(DEGREES)\n    print(midsta)\n    if controller.buttonLUp.pressing():\n        motor_middle.set_velocity(100, PERCENT)\n        motor_middle.spin_to_position(176,DEGREES,wait=True)\n        \n\n    elif controller.buttonFDown.pressing():\n\n        \n    \n        #yellow collect up ปุ่มกดเพื่องัด สีเหลือง\n        motor_middle.set_velocity(80, PERCENT)\n        motor_middle.spin(FORWARD)\n\n    elif controller.buttonFUp.pressing():\n\n\n        #yellow collect don ปุ่มกดเพื่อไม่งัดสีเหลือง\n        motor_middle.set_velocity(80, PERCENT)\n        motor_middle.spin(REVERSE)\n\n    else:\n        \n        motor_middle.set_stopping(HOLD)\n        motor_middle.stop();\n\n\n    \n \n    \n\n    \n\n\n\n\n    \n\n\n\n\n\n\n# ██╗░░░░░░█████╗░░█████╗░██████╗░\n# ██║░░░░░██╔══██╗██╔══██╗██╔══██╗\n# ██║░░░░░██║░░██║██║░░██║██████╔╝\n# ██║░░░░░██║░░██║██║░░██║██╔═══╝░\n# ███████╗╚█████╔╝╚█████╔╝██║░░░░░\n# ╚══════╝░╚════╝░░╚════╝░╚═╝░░░░░\n\nwhile True:\n  \n    main()\n    spinpurple()\n    shot()\n    lift()\n    yellow()\n\n\n\n   \n  \n \n    \n\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"none"},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","target":"Physical"}