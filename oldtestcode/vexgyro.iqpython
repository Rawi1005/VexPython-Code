{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\ncontroller = Controller()\nmotor_left = Motor(Ports.PORT3, False)\nmotor_right = Motor(Ports.PORT4, True)\ndistance_10 = Distance(Ports.PORT10)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n# \tAuthor:       VEX\n# \tCreated:\n# \tDescription:  VEXcode IQ Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\nimport time\n\n\n\n\n\n# Begin project code\nbrain_inertial.set_rotation(0, DEGREES)\n# motor_left.set_velocity((70,PERCENT)\n# motor_right.set_velocity(70,PERCENT)\ndef main():\n\n    db = brain_inertial.rotation()\n    print(db)\n    # time.sleep(0.10)\n\n    \n    if db <= -3:\n        motor_left.set_velocity(70,PERCENT)\n        motor_right.set_velocity(65,PERCENT)\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD)\n        ### left ####\n    elif db >= 3:\n        motor_left.set_velocity(65,PERCENT)\n        motor_right.set_velocity(70,PERCENT)\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD)\n        ### right ####\n    \n    else:\n        motor_left.set_velocity(100,PERCENT)\n        motor_right.set_velocity(100,PERCENT)\n        motor_left.spin(FORWARD)\n        motor_right.spin(FORWARD)\n      \n\n        \n\n\ndef dissensor():\n    x = distance_10.object_distance(MM)\n    print(x)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n    brain.screen.print(str(x))\n\n    if x >= 445:\n        motor_left.set_velocity(100,PERCENT)\n        motor_right.set_velocity(100,PERCENT)\n        motor_left.spin(REVERSE)\n        motor_right.spin(REVERSE)\n        \n    elif x <= 444:\n        motor_left.stop()\n        motor_right.stop()\n\n    else:\n        print(\"error\",x)\n\n        \n\n    time.sleep(0.5)\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwhile True:\n    main()\n\n\n# db = brain_inertial.rotation()\n# print(db)\n# while brain_inertial.rotation() <= 90:\n#     db = brain_inertial.rotation()\n#     print(db)\n#     motor_left.set_velocity(20,PERCENT)\n#     motor_right.set_velocity(-20,PERCENT)\n#     motor_left.spin(FORWARD)\n#     motor_right.spin(FORWARD) \n\n# motor_left.stop()\n# motor_right.stop()","textLanguage":"python","rconfig":[{"port":[],"name":"controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"none"},"triportSourcePort":22},{"port":[3],"name":"motor_left","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"motor_right","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[10],"name":"distance_10","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{}}],"slot":0,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.4","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","target":"Physical"}